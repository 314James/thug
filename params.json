{"name":"Thug","body":"The number of client-side attacks has grown significantly in the past few years shifting focus on poorly protected vulnerable clients. Just as the most known honeypot technologies enable research into server-side attacks, honeyclients allow the study of client-side attacks. A complement to honeypots, a honeyclient is a tool designed to mimic the behavior of a user-driven network client application, such as a web browser, and be exploited by an attackerâ€™s content.\r\n\r\nRequirements\r\n============\r\n\r\n- Python 2.7\r\n\thttp://www.python.org/\r\n\r\n- Google V8\r\n\thttp://code.google.com/p/v8/\r\n\r\n- PyV8\r\n\thttp://code.google.com/p/pyv8/\r\n\r\n- Beautiful Soup 4\r\n\thttp://www.crummy.com/software/BeautifulSoup/\r\n\r\n- Libemu\r\n\thttp://libemu.carnivore.it/\r\n\r\n- Pylibemu\r\n\thttps://github.com/buffer/pylibemu\r\n\r\n- Pefile\r\n\thttp://code.google.com/p/pefile/\r\n\r\n- Chardet\r\n\thttp://chardet.feedparser.org/\r\n\r\n- httplib2 0.7.1 or later\r\n\thttp://code.google.com/p/httplib2/\r\n\r\n- MongoDB (optional)\r\n\thttp://www.mongodb.org/\r\n\r\n- PyMongo (optional)\r\n\thttp://www.mongodb.org/display/DOCS/Python+Language+Center\r\n\r\n\r\nInstallation\r\n============\r\n\r\n- BeautifulSoup 4\r\n\r\nCurrently the best way to install Beautiful Soup 4 is through `easy_install'\r\nbecause it is still in beta release. Beautiful Soup 4 is published through \r\nPyPi, so you can install it with easy_install or pip. The package name is \r\nbeautifulsoup4, and the same package works on Python 2 and Python 3.\r\n\r\n\t# easy_install beautifulsoup4  \r\n\r\nor alternatively\r\n\r\n\t# pip install beautifulsoup4\r\n \r\n\r\n- V8/PyV8\r\n\r\nIn order to properly install V8 and PyV8 please follow the procedure\r\ndescribed below.\r\n\r\n\r\n1. Checkout V8 source code from SVN  \r\n\r\n        $ svn checkout http://v8.googlecode.com/svn/trunk/ v8\r\n\r\n2. Patch V8 source code with the patches you can find in thug/patches\r\n   directory\r\n\r\n        $ cp thug/patches/V8-patch* .\r\n        $ patch -p0 < V8-patch1.diff \r\n        patching file v8/src/log.h\r\n        $ patch -p0 < V8-patch2.diff \r\n        patching file v8/src/parser.h\r\n        Hunk #1 succeeded at 456 (offset 7 lines).\r\n\r\n3. Checkout PyV8 source code from SVN\r\n\r\n        $ svn checkout http://pyv8.googlecode.com/svn/trunk/ pyv8\r\n\r\n4. Set the environment variable V8_HOME with the V8 source code \r\n   absolute path (you need to change the value reported below)\r\n\r\n        $ export V8_HOME=/home/buffer/v8\r\n\r\n5. Move to PyV8 source code directory\r\n\r\n        $ cd pyv8\r\n\r\n6. Build and install (PyV8 setup.py will properly install both V8\r\n   and PyV8)\r\n\r\n        ~/pyv8 $ python setup.py build\r\n        ~/pyv8 $ sudo python setup.py install\r\n\r\n7. Test the installation\r\n\r\n        ~/pyv8 $ python PyV8.py\r\n\r\n   If no problems occur, you have successfully installed V8 and PyV8.\r\n\r\n\r\nIn order to install the other required libraries and packages please \r\nfollow installation procedures as specified in their documentation.\r\n\r\n\r\nUsage\r\n=====\r\n\r\n\r\n    ~/thug/src $ python thug.py -h\r\n\r\n        Synopsis:\r\n        Thug: Pure Python honeyclient implementation\r\n\r\n        Usage:\r\n            python thug.py [ options ] url\r\n\r\n        Options:\r\n            -h, --help          \tDisplay this help information\r\n            -u, --useragent=    \r\n            -o, --output=       \tLog to a specified file\r\n            -l, --local         \r\n            -v, --verbose       \tEnable verbose mode    \r\n            -d, --debug         \tEnable debug mode\r\n\r\n        Available User-Agents:\r\n\t    xpie60\t\t\tInternet Explorer 6.0 (Windows XP)\r\n\t    xpie61\t\t\tInternet Explorer 6.1 (Windows XP)\r\n\t    xpie70\t\t\tInternet Explorer 7.0 (Windows XP)\r\n\t    xpie80\t\t\tInternet Explorer 8.0 (Windows XP)\r\n\t    w2kie60\t\t\tInternet Explorer 6.0 (Windows 2000)\r\n\t    w2kie80\t\t\tInternet Explorer 8.0 (Windows 2000)\r\n\r\nPlease note that Thug store downloaded contents and logs in the directory \r\nthug/logs by default if not otherwise specified. You are required to take \r\na look at thug/logs/thug.csv file in order to understand in which directory\r\nlogs were saved. This awful logging mechanism will change soon. Moreover it \r\nis highly suggested to always specify a log file (through option -o).\r\n\r\n\r\nLicense information\r\n===================\r\n\r\nCopyright (C) 2011-2012 Angelo Dell'Aera\r\n\r\nLicense: GNU General Public License, version 2 or later; see COPYING.txt\r\n         included in this archive for details.\r\n\r\n\r\n","tagline":"Python low-interaction honeyclient","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}